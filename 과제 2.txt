1. 기존에 코드에 테스트는 보통 어떤식으로 진행했나요??
 보통 원하는 기능들을 선 구현 후 구현한 기능이 제대로 다른 기능들과 충돌 없이 작동 하는지에 대해서 중점적으로 테스트 했으며 코드에 대한 세부적인 테스트를 진행하지 않아 변수가 혼잡해지는 경우가 많았습니다.



2. 개발 업무를 진행했다고 가정하고 다음 관점에서 한번 생각해봅시다.  그리고 기존의 방식과 위 언급한 Unit Test(TDD의 일정) 방식을 사용했을때 각각 어느것이 유리할지 한번 생각해봅시다.
  => 자신의 코드가 충분히 테스트 되었다는걸 어떤식으로 검증할수 있을지??
 자신의 코드가 충분히 테스트 되었다는 것을 자신이 예상한 결과와 실제 동작해서 구해진 값과의 비교를 통해서 검증할 수 있다고 생각합니다.
  => 개발자간 서로 테스트 코드를 공유할 때가 있을지??
설계자의 지시대로 조립하기 위해서는, 인력의 대체가 일상인 오늘날에 테스트 코드를 공유하여 재사용하는 것이 가능하다고 생각합니다.
  => 구현을 하기전 테스트 코드를 작성하는게 도움이 될지?
세부적인 것을 구현하기전에 웜업 개념으로 작성하는 것이 도움이 되지 않을까 싶습니다.
 